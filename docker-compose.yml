version: "3"

services:

  user-service:
    image: services/user-service
    build:
      context: ${BACKEND_REPO_ABSOLUTE_PATH}/user-service/
      dockerfile: ${INFRA_REPO_ABSOLUTE_PATH}/images/user-service.Dockerfile
    networks:
      - user-service-network
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - database

  email-service:
    image: services/email-service
    build:
      context: ${BACKEND_REPO_ABSOLUTE_PATH}/email-service/
      dockerfile: ${INFRA_REPO_ABSOLUTE_PATH}/images/email-service.Dockerfile
    networks:
      - user-service-network
    ports:
      - "8081:8081"
    restart: on-failure
    depends_on:
      - mongo

  bank-service:
    image: services/bank-service
    build:
      context: ${BACKEND_REPO_ABSOLUTE_PATH}/bank-service/
      dockerfile: ${INFRA_REPO_ABSOLUTE_PATH}/images/bank-service.Dockerfile
    networks:
      - user-service-network
    ports:
      - "8082:8082"
    restart: on-failure
    depends_on:
      - database

  exchange-service:
    image: services/exchange-service
    build:
      context: ${BACKEND_REPO_ABSOLUTE_PATH}/exchange-service/
      dockerfile: ${INFRA_REPO_ABSOLUTE_PATH}/images/exchange-service.Dockerfile
    networks:
      - user-service-network
    ports:
      - "8083:8083"
    restart: on-failure
    depends_on:
      - database
      - user-service

  angular-frontend:
    build:
      context: ${FRONTEND_REPO_ABSOLUTE_PATH}/
      dockerfile: ${INFRA_REPO_ABSOLUTE_PATH}/images/frontend.Dockerfile
    ports:
      - "80:80"
    networks:
      - user-service-network
      
  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: main_database
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    networks:
      - user-service-network
    volumes:
      - ${INFRA_REPO_ABSOLUTE_PATH}/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - user-service-network
    volumes:
      - redis_data:/data

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - user-service-network
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
      MONGO_INITDB_DATABASE: email_service_database
    restart: always

networks:
  user-service-network:

volumes:
  database_data:
  redis_data:
  mongo_data:
